
/*TRIGGER
Impedir vender paquetes a personas que tenga 3 malas calificanes
*/
CREATE OR REPLACE FUNCTION BANEO() RETURNS TRIGGER 
AS
$$
DECLARE
MAL INT:=0;
MAXIMO INT:=2;
BEGIN 
	SELECT
	COUNT (CV.CLIENTE_ID)INTO MAL
	FROM CLIENTE_VIAJERO CV
	JOIN CONTRATO C ON CV.CLIENTE_ID= C.CLIENTE_ID 
	JOIN ACTO_VANDALICO AV  ON C.CONTRATO_ID= AV.CONTRATO_ID
	WHERE CV.CLIENTE_ID= NEW.CLIENTE_ID;
	IF MAL>=MAXIMO THEN 
	RAISE EXCEPTION 'CLIENTE MAL PORTADO 2 VECES';
	END IF;
	RETURN NEW;
END 
$$
LANGUAGE 'plpgsql';

CREATE TRIGGER BANEAR_USUARIO BEFORE INSERT ON CONTRATO FOR EACH ROW EXECUTE PROCEDURE BANEO();

/* CURSOR

A nivel de cursor, que aparezca en los asesores cuanto vendió cuantos paquetes le pagaron en efectivo y cuántos de forma
alternativa*/
DO $$
DECLARE
EFECTIVO INT:=0;
CREDITO INT:=0;
PAGOS RECORD;

DIFERENCIA CURSOR FOR

SELECT 
ASESOR_NOMBRE,
FP.FORMA_PAGO_TIPO,
COUNT(PT.PAQUETE_NOMBRE)

FROM CONTRATO C
INNER JOIN ASESOR_DE_VIAJE AV ON C.ASESOR_ID=AV.ASESOR_ID
INNER JOIN FORMA_DE_PAGO FP ON C.FORMA_PAGO_ID=FP.FORMA_PAGO_ID
INNER JOIN PAQUETES_TURISTICOS PT ON C.PAQUETE_ID=PT.PAQUETE_ID
GROUP BY PT.PAQUETE_NOMBRE, ASESOR_NOMBRE,FP.FORMA_PAGO_TIPO
ORDER BY COUNT(PT.PAQUETE_NOMBRE) DESC;

BEGIN 
	OPEN DIFERENCIA;
	FETCH DIFERENCIA	 INTO PAGOS;
	WHILE (FOUND) LOOP
	if ('EFECTIVO' = PAGOS.FORMA_PAGO_TIPO) then
	EFECTIVO:= EFECTIVO + 1;
	else
	CREDITO:= CREDITO + 1;
	END IF;
	FETCH DIFERENCIA	 INTO PAGOS;
	END LOOP ;
RAISE NOTICE 'EL ASESOR % REALIZO % EN EFECTIVO Y % A CREDITO', PAGOS.ASESOR_NOMBRE, EFECTIVO, CREDITO;
END$$
LANGUAGE 'plpgsql';
/* PROCESO ALMACENADO
Un procedimiento almacenado donde se ingrese el nombre de un cliente y muestre por año cuantos paquetes compro y cuanto gasto en ese año
*/

CREATE OR REPLACE FUNCTION INGRESO (VARCHAR) 
RETURNS TABLE(AÑO VARCHAR,NOMBRE_CLIENTE VARCHAR,TOTAL_PAQUETES_COMPRADOS VARCHAR,PAGO_ANUAL MONEY)
AS
$$
SELECT 
EXTRACT(YEAR FROM CONTRATO_IDA) AS AÑO,
CV.CLIENTE_NOMBRE AS NOMBRE_CLIENTE,
COUNT(CONTRATO_ID) AS TOTAL_PAQUETES_COMPRADOS,
SUM(CONTRATO_PAGO) AS PAGO_ANUAL
FROM CONTRATO
INNER JOIN CLIENTE_VIAJERO CV ON CONTRATO.CLIENTE_ID= CV.CLIENTE_ID
WHERE CV.CLIENTE_NOMBRE=$1
GROUP BY  CV.CLIENTE_INGRESO,CV.CLIENTE_NOMBRE;
$$
LANGUAGE SQL;

/*PROCESO ALMACENADO PRUEBA */
SELECT *FROM INGRESO('KARLA INDIRA');



/*DIAGRAMA DE BARRA
Reporte que muestre en un gráfico de barras cuantas ventas hubo por año*/

SELECT
EXTRACT(YEAR FROM CONTRATO_IDA) AS AÑO,
COUNT(CONTRATO_ID) AS TOTAL_PAQUETES_COMPRADOS,
CT.CENTRO_NOMBRE AS CENTRO
FROM CONTRATO C
INNER JOIN ASESOR_DE_VIAJE AV ON C.ASESOR_ID=AV.ASESOR_ID
INNER JOIN CENTRO_DE_VENTAS_PT CT ON AV.CENTRO_ID=CT.CENTRO_ID
GROUP BY EXTRACT(YEAR FROM CONTRATO_IDA),CT.CENTRO_ID
ORDER BY EXTRACT(YEAR FROM CONTRATO_IDA) DESC;








